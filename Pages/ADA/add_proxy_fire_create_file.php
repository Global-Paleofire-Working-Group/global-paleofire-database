<?php

//error_reporting(E_ALL);
//ini_set('display_errors', TRUE);
//ini_set('display_startup_errors', TRUE);
//phpinfo(); exit();

//session_start();
require_once('../../config.php');
$path = $_SERVER["DOCUMENT_ROOT"] . GLOBAL_RACINE . 'Library';
set_include_path(get_include_path() . PATH_SEPARATOR . $path);
$path = './Library';
set_include_path(get_include_path() . PATH_SEPARATOR . $path);
require_once (REP_MODELS."/user/WebAppRoleGCD.php");
require_once (REP_MODELS."/user/WebAppPermGCD.php");
require_once (REP_MODELS."/user/WebAppUserGCD.php");
/** Include PHPExcel */
require_once '../../Library/PHPExcel/Classes/PHPExcel.php';
require_once (REP_MODELS."Site.php");
require_once (REP_MODELS."Core.php");
require_once (REP_MODELS."ProxyFire.php");
require_once (REP_MODELS."ProxyFireMeasurement.php");
require_once (REP_MODELS."ProxyFireMeasurementUnit.php");
require_once (REP_MODELS."ProxyFireMethodTreatment.php");
require_once (REP_MODELS."ProxyFireMethodEstimation.php");


require_once (REP_LIB."connect_database.php");
require_once (REP_LIB."database.php");
//if ($_SESSION['gcd_user_role'] == WebAppRoleGCD::SUPERADMINISTRATOR || $_SESSION['gcd_user_role'] == WebAppRoleGCD::ADMINISTRATOR || $_SESSION['gcd_user_role'] == WebAppRoleGCD::CONTRIBUTOR){

    // on vérifie qu'on a des valeurs en paramètres
    if (isset($_GET['is']) && isset($_GET['ic']) && isset($_GET['ds']) && isset($_GET['pf'])
     && isset($_GET['pfm']) && isset($_GET['pfmu']) && isset($_GET['pfpsmin'])
     && isset($_GET['pfpsmax']) && isset($_GET['pfmt']) && isset($_GET['pfme']) ){//xli 16-6
        $id_site = $_GET['is'];
        $id_core = $_GET['ic'];
        $id_data_source = $_GET['ds'];
        $id_proxy_fire =$_GET['pf'];
        $id_proxy_fire_measurement =$_GET['pfm'];
        $id_proxy_fire_measurement_unit =$_GET['pfmu'];
        $id_proxy_fire_particle_size_min =$_GET['pfpsmin'];
        $id_proxy_fire_particle_size_max =$_GET['pfpsmax'];
        $id_proxy_fire_method_treatment =$_GET['pfmt'];
        $id_proxy_fire_method_estimation =$_GET['pfme'];
        $id_proxy_fire_age_method = $_GET['a'];
        $id_proxy_fire_publis = explode(',', $_GET['pu']);
        $id_proxy_fire_authors = explode(',', $_GET["au"]);

        // on vérifie que le site et la carotte existe et on récupère les noms
        $site = SITE::getObjectPaleofireFromId($id_site);
        $core = CORE::getObjectPaleofireFromId($id_core);
        $data_source = DataSource::getObjectPaleofireFromId($id_data_source);
        $proxy_fire = ProxyFire::getObjectPaleofireFromId($id_proxy_fire);
        $proxy_fire_measurement = ProxyFireMeasurement::getObjectPaleofireFromId($id_proxy_fire_measurement);
        $proxy_fire_measurement_unit = ProxyFireMeasurementUnit::getObjectPaleofireFromId($id_proxy_fire_measurement_unit);
        //$proxy_fire_particle_size_min = ProxyFire:getObjectPaleofireFromId($id_proxy_fire);
        //$proxy_fire_particle_size_max = ProxyFire:getObjectPaleofireFromId($id_proxy_fire);
        $proxy_fire_method_treatment = ProxyFireMethodTreatment::getObjectPaleofireFromId($id_proxy_fire_method_treatment);
        $proxy_fire_method_estimation = ProxyFireMethodEstimation::getObjectPaleofireFromId($id_proxy_fire_method_estimation);

        $age_model_method = AgeModelMethod::getObjectPaleofireFromId($id_proxy_fire_age_method);

        //on vérifie que les publis existent
        foreach($id_proxy_fire_publis as $id_pub){
            if (empty(Publi::getObjectPaleofireFromId($id_pub))){
                $id_pub = null;
            }
        }
        $id_proxy_fire_publis = array_filter($id_proxy_fire_publis);

        // on vérifie que les auteurs existent
        foreach($id_proxy_fire_authors as $id_contact){
            if (empty(Contact::getObjectFromStaticList($id_contact))){
                $id_contact = null;
            }
        }
        $id_proxy_fire_authors = array_filter($id_proxy_fire_authors);


        if ($site != NULL && $core != NULL && $data_source != NULL){
          //&& $proxy_fire != NULL && $proxy_fire_measurement != NULL && $proxy_fire_measurement_unit != NULL
          //&& $proxy_fire_particle_size_min != NULL && $proxy_fire_particle_size_max != NULL && $proxy_fire_method_treatment && $proxy_fire_method_estimation){
            // Create new PHPExcel object
            $objPHPExcel = new PHPExcel();

            // Set document properties
            $objPHPExcel->getProperties()->setCreator("GCD Paleofire")
                ->setLastModifiedBy("GCD Paleofire")
                ->setTitle("File template for samples integration")
                ->setSubject("File template for samples integration")
                ->setDescription("File template for samples integration generated by palefire.org")
                ->setKeywords("template samples xlsx");

            // ajout des paramètres en page 2
            $sheet = new PHPExcel_Worksheet(null, 'Parameters');

            // Add some data
            $data_source_name = "";
            if ($data_source != NULL) $data_source_name = $data_source->getName();
            $proxy_fire_name = "";
            if ($proxy_fire != NULL) $proxy_fire_name = $proxy_fire->getName();
            $proxy_fire_measurement_name = "";
            if ($proxy_fire_measurement != NULL) $proxy_fire_measurement_name = $proxy_fire_measurement->getName();
            $proxy_fire_measurement_unit_name = "";
            if ($proxy_fire_measurement_unit != NULL) $proxy_fire_measurement_unit_name = $proxy_fire_measurement_unit->getName();
            $proxy_fire_method_treatement_name = "";
            if ($proxy_fire_method_treatement != NULL) $proxy_fire_method_treatement_name = $proxy_fire_method_treatement->getName();
            $proxy_fire_method_treatement_estimation_name = "";
            if ($proxy_fire_method_estimation != NULL) $proxy_fire_method_estimation_name = $proxy_fire_method_estimation->getName();

            $activeSheet = $objPHPExcel->setActiveSheetIndex(0);
            $activeSheet ->setCellValue('A1', "File template for samples integration\n"
                    ."Site : ".$site->getName()."\n"
                    ."Core : ".$core->getName()."\n"
                    ."Data source : ".$data_source->getName()."\n"
                    ."Proxy Fire : ".$id_proxy_fire."\n"
                    ."agemethod : ".$id_proxy_fire_age_method."\n"
                    ."pubs:".implode($id_proxy_fire_publis, ',')."\n"
                    ."authors:".implode($id_proxy_fire_authors, ',')."\n"
                    )
                        ->mergeCells('A1:G1')
                        ->getRowDimension('1')->setRowHeight(115);
            $activeSheet->getStyle('A1')->getAlignment()->setWrapText(true);

            $myVal = new stdClass();
            $myVal->site = $id_site;
            $myVal->core = $id_core;
            $myVal->datasource = $id_data_source;
            $myVal->proxy_fire = $id_proxy_fire;
            $myVal->proxy_fire_measurement = $id_proxy_fire_measurement;
            $myVal->proxy_fire_measurement_unit = $id_proxy_fire_measurement_unit;
            $myVal->proxy_fire_particle_size_min = $id_proxy_fire_particle_size_min;
            $myVal->proxy_fire_particle_size_max = $id_proxy_fire_particle_size_max;
            $myVal->proxy_fire_measurement_unit = $id_proxy_fire_measurement_unit;
            $myVal->proxy_fire_method_treatment = $id_proxy_fire_method_treatment;
            $myVal->proxy_fire_method_estimation = $id_proxy_fire_method_estimation;
            $myVal->proxy_fire_age_method = $id_proxy_fire_age_method;
            $myVal->proxy_fire_publis = $id_proxy_fire_publis;
            $myVal->proxy_fire_authors = $id_proxy_fire_authors;


            $activeSheet->setCellValue('A2',json_encode($myVal));

            $activeSheet//->setCellValue('A3', 'SAMPLE NAME') va être créé automatiquement
                        ->setCellValue('A3', 'DEPTH UP (cm)')
                        //->setCellValue('C3', 'DEPTH MIDLLE') va être calculé automatiquement
                        ->setCellValue('B3', 'DEPTH DOWN (cm)')
                        ->setCellValue('C3', 'AGE UP (cal BP)')
                        //->setCellValue('F3', 'AGE UP NEGATIVE ERROR')
                        //->setCellValue('G3', 'AGE UP POSITIVE ERROR')
                        ->setCellValue('D3', 'AGE DOWN (cal BP)')
                        ->setCellValue('E3', 'VOLUME (cm³)')
                        ->setCellValue('F3', 'CHARCOAL QUANTITY');
                        //->setCellValue('I3', 'AGE DOWN NEGATIVE ERROR')
                        //->setCellValue('J3', 'AGE DOWN POSITIVE ERROR');
            $activeSheet->getColumnDimension('A')->setWidth(20);
            $activeSheet->getColumnDimension('B')->setWidth(20);
            $activeSheet->getColumnDimension('C')->setWidth(30);
            $activeSheet->getColumnDimension('D')->setWidth(30);
            $activeSheet->getColumnDimension('E')->setWidth(30);
            $activeSheet->getColumnDimension('F')->setWidth(30);
            //$activeSheet->getColumnDimension('G')->setWidth(20);
            //$activeSheet->getColumnDimension('H')->setWidth(20);
            //$activeSheet->getColumnDimension('I')->setWidth(20);
            //$activeSheet->getColumnDimension('J')->setWidth(20);

            // ajout d'une liste déroulante pour la colonne size
            /*$objValidSize = new PHPExcel_Cell_DataValidation;
            $objValidSize->setType( PHPExcel_Cell_DataValidation::TYPE_LIST );
            $objValidSize->setFormula1($plageValidationSize);
            $objValidSize->setShowDropDown(true);
            for($i = 4; $i < 500; $i++){
                $activeSheet->getCell('E'.$i)->setDataValidation($objValidSize);
            }*/
            // Rename worksheet
            $objPHPExcel->getActiveSheet()->setTitle('Samples integration');

            // Set active sheet index to the first sheet, so Excel opens this as the first sheet
            $objPHPExcel->setActiveSheetIndex(0);

            // Redirect output to a client’s web browser
            header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
            header('Content-Disposition: attachment;filename="sample_template.xlsx"');
            header('Cache-Control: max-age=0');

            $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
            $objWriter->save('php://output');

            exit;
        } else {
            echo '<div class="alert alert-danger"><strong>Error recording !</strong></br>Site, core, units or age model must be selected.</div>';
        }
    }
